# ODP runtime configuration options
#
# ODP_CONFIG_FILE can be used to override default values and it doesn't
# have to include all available options. The missing options are
# replaced with hardcoded default values.
#
# The options defined here are implementation specific and valid option
# values should be checked from the implementation code.
#
# See libconfig syntax: https://hyperrealm.github.io/libconfig/libconfig_manual.html#Configuration-Files

# Mandatory fields
odp_implementation = "linux-generic"
config_file_version = "0.1.30"

timer: {
	# Use inline timer implementation
	#
	# By default, timer processing is done in background threads (thread per
	# timer pool). With inline implementation timers are processed by ODP
	# application threads instead. When using inline timers the application
	# has to call odp_schedule() or odp_queue_deq() regularly to actuate
	# timer processing.
	#
	# 0: Use POSIX timer and background threads to process timers
	# 1: Use inline timer implementation and application threads to process
	#    timers
	inline = 1

	# Inline timer poll interval
	#
	# When set to 1 inline timers are polled during every schedule round.
	# Increasing the value reduces timer processing overhead while
	# decreasing accuracy. Ignored when inline timer is not used.
	inline_poll_interval = 1

	# Inline timer poll interval in nanoseconds
	#
	# When inline_poll_interval is larger than 1, use this option to limit
	# inline timer polling rate in nanoseconds. By default, this defines the
	# maximum rate a thread may poll timers. If a timer pool is created with
	# a higher resolution than this, the polling rate is increased
	# accordingly. Ignored when inline timer is not used.
	inline_poll_interval_nsec = 1

	# Inline timer use of threads
	#
	# Select which thread types process non-private timer pools in inline
	# timer implementation. Thread type does not affect private timer
	# pool procesessing, those are always processed by the thread which
	# created the pool. Ignored when inline timer is not used.
	#
	# 0: Both control and worker threads process non-private timer pools
	# 1: Only worker threads process non-private timer pools
	# 2: Only control threads process non-private timer pools
	inline_thread_type = 0
}
